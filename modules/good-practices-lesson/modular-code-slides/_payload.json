[{"data":1,"prerenderedAt":703},["Reactive",2],{"content-query-nmxCwJj1W6":3,"content-query-AT44bg6JPw":645},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"type":10,"order":11,"author":12,"body":13,"_type":639,"_id":640,"_source":641,"_file":642,"_extension":643,"plainText":644},"/modules/good-practices-lesson/modular-code-slides","good-practices-lesson",false,"","Modular Code","Day 3 Code Refinery","slides",2,"Barbara Vreede, Ole Mussmann",{"type":14,"children":15,"toc":618},"root",[16,25,31,36,43,63,81,85,91,98,102,108,136,140,146,151,157,170,174,179,184,190,203,207,212,217,223,236,240,245,250,255,272,276,281,286,291,304,308,314,320,333,341,345,351,356,369,374,383,387,392,412,416,422,427,436,440,446,451,460,464,470,474,480,503,507,513,534,538,544,549,558,562,568,573,582,586,592],{"type":17,"tag":18,"props":19,"children":21},"element","h1",{"id":20},"developing-modular-code",[22],{"type":23,"value":24},"text","Developing Modular Code",{"type":17,"tag":26,"props":27,"children":28},"p",{},[29],{"type":23,"value":30},"note:",{"type":17,"tag":26,"props":32,"children":33},{},[34],{"type":23,"value":35},"===",{"type":17,"tag":37,"props":38,"children":40},"h2",{"id":39},"what-is-modularity",[41],{"type":23,"value":42},"What is modularity?",{"type":17,"tag":44,"props":45,"children":46},"ul",{},[47,53,58],{"type":17,"tag":48,"props":49,"children":50},"li",{},[51],{"type":23,"value":52},"Software is 'built up' from smaller elements",{"type":17,"tag":48,"props":54,"children":55},{},[56],{"type":23,"value":57},"Elements are self-contained and independent",{"type":17,"tag":48,"props":59,"children":60},{},[61],{"type":23,"value":62},"Each element handles a specific (set of) task(s)",{"type":17,"tag":26,"props":64,"children":65},{},[66,72,74,79],{"type":17,"tag":67,"props":68,"children":69},"strong",{},[70],{"type":23,"value":71},"Simple components",{"type":23,"value":73}," build ",{"type":17,"tag":67,"props":75,"children":76},{},[77],{"type":23,"value":78},"complex behavior",{"type":23,"value":80},".",{"type":17,"tag":26,"props":82,"children":83},{},[84],{"type":23,"value":35},{"type":17,"tag":37,"props":86,"children":88},{"id":87},"modular-code",[89],{"type":23,"value":90},"Modular code",{"type":17,"tag":92,"props":93,"children":97},"img",{"width":94,"alt":95,"src":96},900,"think in building blocks","https://user-images.githubusercontent.com/5747405/207459058-59c88b4c-1401-428f-b28a-0ac3e72bd964.png",[],{"type":17,"tag":26,"props":99,"children":100},{},[101],{"type":23,"value":35},{"type":17,"tag":37,"props":103,"children":105},{"id":104},"what-are-these-blockselements",[106],{"type":23,"value":107},"What are these blocks/elements?",{"type":17,"tag":44,"props":109,"children":110},{},[111,116,121,126,131],{"type":17,"tag":48,"props":112,"children":113},{},[114],{"type":23,"value":115},"functions",{"type":17,"tag":48,"props":117,"children":118},{},[119],{"type":23,"value":120},"classes",{"type":17,"tag":48,"props":122,"children":123},{},[124],{"type":23,"value":125},"modules",{"type":17,"tag":48,"props":127,"children":128},{},[129],{"type":23,"value":130},"libraries/packages",{"type":17,"tag":48,"props":132,"children":133},{},[134],{"type":23,"value":135},"programs",{"type":17,"tag":26,"props":137,"children":138},{},[139],{"type":23,"value":35},{"type":17,"tag":37,"props":141,"children":143},{"id":142},"why-write-modular-code",[144],{"type":23,"value":145},"Why write modular code?",{"type":17,"tag":26,"props":147,"children":148},{},[149],{"type":23,"value":150},"To increase robustness:",{"type":17,"tag":92,"props":152,"children":156},{"width":153,"alt":154,"src":155},200,"testing a single module","./media/modular-code/testing_module.png",[],{"type":17,"tag":44,"props":158,"children":159},{},[160,165],{"type":17,"tag":48,"props":161,"children":162},{},[163],{"type":23,"value":164},"A well-designed module can be tested.",{"type":17,"tag":48,"props":166,"children":167},{},[168],{"type":23,"value":169},"This helps keep the codebase well-functioning and bug-free.",{"type":17,"tag":26,"props":171,"children":172},{},[173],{"type":23,"value":35},{"type":17,"tag":37,"props":175,"children":177},{"id":176},"why-write-modular-code-1",[178],{"type":23,"value":145},{"type":17,"tag":26,"props":180,"children":181},{},[182],{"type":23,"value":183},"To make maintenance easier:",{"type":17,"tag":92,"props":185,"children":189},{"width":186,"alt":187,"src":188},300,"testing a module taken from a larger project","./media/modular-code/testing_module_maintenance.png",[],{"type":17,"tag":44,"props":191,"children":192},{},[193,198],{"type":17,"tag":48,"props":194,"children":195},{},[196],{"type":23,"value":197},"Modular code is more readable and understandable.",{"type":17,"tag":48,"props":199,"children":200},{},[201],{"type":23,"value":202},"Modules can be debugged separately.",{"type":17,"tag":26,"props":204,"children":205},{},[206],{"type":23,"value":35},{"type":17,"tag":37,"props":208,"children":210},{"id":209},"why-write-modular-code-2",[211],{"type":23,"value":145},{"type":17,"tag":26,"props":213,"children":214},{},[215],{"type":23,"value":216},"To allow reusability:",{"type":17,"tag":92,"props":218,"children":222},{"width":219,"alt":220,"src":221},400,"reuse a module in another project","./media/modular-code/reuse_module.png",[],{"type":17,"tag":44,"props":224,"children":225},{},[226,231],{"type":17,"tag":48,"props":227,"children":228},{},[229],{"type":23,"value":230},"A module can live independent of its original context",{"type":17,"tag":48,"props":232,"children":233},{},[234],{"type":23,"value":235},"It can be reused by another project",{"type":17,"tag":26,"props":237,"children":238},{},[239],{"type":23,"value":35},{"type":17,"tag":37,"props":241,"children":243},{"id":242},"why-write-modular-code-3",[244],{"type":23,"value":145},{"type":17,"tag":26,"props":246,"children":247},{},[248],{"type":23,"value":249},"To facilitate scalability:",{"type":17,"tag":92,"props":251,"children":254},{"height":186,"alt":252,"src":253},"scalability","./media/modular-code/scalability.png",[],{"type":17,"tag":256,"props":257,"children":258},"div",{},[259],{"type":17,"tag":44,"props":260,"children":261},{},[262,267],{"type":17,"tag":48,"props":263,"children":264},{},[265],{"type":23,"value":266},"Complexity remains low by design",{"type":17,"tag":48,"props":268,"children":269},{},[270],{"type":23,"value":271},"This creates space for scaling up",{"type":17,"tag":26,"props":273,"children":274},{},[275],{"type":23,"value":35},{"type":17,"tag":37,"props":277,"children":279},{"id":278},"why-write-modular-code-4",[280],{"type":23,"value":145},{"type":17,"tag":26,"props":282,"children":283},{},[284],{"type":23,"value":285},"To create opportunities for innovation:",{"type":17,"tag":92,"props":287,"children":290},{"height":186,"alt":288,"src":289},"tetris shows innovation","./media/modular-code/tetris_innovation.png",[],{"type":17,"tag":44,"props":292,"children":293},{},[294,299],{"type":17,"tag":48,"props":295,"children":296},{},[297],{"type":23,"value":298},"Modules increase the capabilities and power of a project",{"type":17,"tag":48,"props":300,"children":301},{},[302],{"type":23,"value":303},"Rearrange old modules for new applications",{"type":17,"tag":26,"props":305,"children":306},{},[307],{"type":23,"value":35},{"type":17,"tag":92,"props":309,"children":313},{"width":310,"alt":311,"src":312},800,"development speed","./media/modular-code/development-speed.svg",[],{"type":17,"tag":37,"props":315,"children":317},{"id":316},"a-good-module",[318],{"type":23,"value":319},"A good module...",{"type":17,"tag":44,"props":321,"children":322},{},[323,328],{"type":17,"tag":48,"props":324,"children":325},{},[326],{"type":23,"value":327},"performs limited and clearly defined tasks",{"type":17,"tag":48,"props":329,"children":330},{},[331],{"type":23,"value":332},"has a good name",{"type":17,"tag":44,"props":334,"children":335},{},[336],{"type":17,"tag":48,"props":337,"children":338},{},[339],{"type":23,"value":340},"is readable",{"type":17,"tag":26,"props":342,"children":343},{},[344],{"type":23,"value":35},{"type":17,"tag":37,"props":346,"children":348},{"id":347},"readability-shorter-code",[349],{"type":23,"value":350},"Readability =/= shorter code",{"type":17,"tag":26,"props":352,"children":353},{},[354],{"type":23,"value":355},"Shorter:",{"type":17,"tag":357,"props":358,"children":363},"pre",{"className":359,"code":361,"language":362,"meta":7},[360],"language-python=","indexATG = [n for n,i in enumerate(myList) if i == 'ATG']\nindexAAG = [n for n,i in enumerate(myList) if i == 'AAG']\n","python=",[364],{"type":17,"tag":365,"props":366,"children":367},"code",{"__ignoreMap":7},[368],{"type":23,"value":361},{"type":17,"tag":26,"props":370,"children":371},{},[372],{"type":23,"value":373},"More modular:",{"type":17,"tag":357,"props":375,"children":378},{"className":376,"code":377,"language":362,"meta":7},[360],"def getIndex(inputList,z):\n    zIndex = [n for n,i in enumerate(li) if i == z]\n    return zIndex\n\nindexATG = getIndex(myList,'ATG')\nindexAAG = getIndex(myList,'AAG')\n",[379],{"type":17,"tag":365,"props":380,"children":381},{"__ignoreMap":7},[382],{"type":23,"value":377},{"type":17,"tag":26,"props":384,"children":385},{},[386],{"type":23,"value":35},{"type":17,"tag":37,"props":388,"children":390},{"id":389},"a-good-module-1",[391],{"type":23,"value":319},{"type":17,"tag":44,"props":393,"children":394},{},[395,399,403,407],{"type":17,"tag":48,"props":396,"children":397},{},[398],{"type":23,"value":327},{"type":17,"tag":48,"props":400,"children":401},{},[402],{"type":23,"value":332},{"type":17,"tag":48,"props":404,"children":405},{},[406],{"type":23,"value":340},{"type":17,"tag":48,"props":408,"children":409},{},[410],{"type":23,"value":411},"is pure/does not have a 'state'",{"type":17,"tag":26,"props":413,"children":414},{},[415],{"type":23,"value":35},{"type":17,"tag":37,"props":417,"children":419},{"id":418},"a-pure-function",[420],{"type":23,"value":421},"A pure function",{"type":17,"tag":26,"props":423,"children":424},{},[425],{"type":23,"value":426},"has no side-effects:",{"type":17,"tag":357,"props":428,"children":431},{"className":429,"code":430,"language":362,"meta":7},[360],"def fahrenheit_to_celsius(temp_f):\n    temp_c = (temp_f - 32.0) * (5.0/9.0)\n    return temp_c\n\n>>> temp_c = fahrenheit_to_celsius(temp_f=77.0)\n>>> print(temp_c)\n25.0\n",[432],{"type":17,"tag":365,"props":433,"children":434},{"__ignoreMap":7},[435],{"type":23,"value":430},{"type":17,"tag":26,"props":437,"children":438},{},[439],{"type":23,"value":35},{"type":17,"tag":37,"props":441,"children":443},{"id":442},"a-stateful-function",[444],{"type":23,"value":445},"A stateful function",{"type":17,"tag":26,"props":447,"children":448},{},[449],{"type":23,"value":450},"changes its environment:",{"type":17,"tag":357,"props":452,"children":455},{"className":453,"code":454,"language":362,"meta":7},[360],"def fahrenheit_to_celsius(temp_f):\n    global temp_c\n    temp_c = (temp_f - f_to_c_offset) * f_to_c_factor\n\n>>> f_to_c_offset = 32.0\n>>> f_to_c_factor = (5.0/9.0)\n>>> temp_c = 0.0\n>>> print(temp_c)\n0.0\n>>> fahrenheit_to_celsius(temp_f=77.0)\n>>> print(temp_c)\n25.0\n",[456],{"type":17,"tag":365,"props":457,"children":458},{"__ignoreMap":7},[459],{"type":23,"value":454},{"type":17,"tag":26,"props":461,"children":462},{},[463],{"type":23,"value":35},{"type":17,"tag":37,"props":465,"children":467},{"id":466},"identifying-opportunities-for-modularization",[468],{"type":23,"value":469},"Identifying opportunities for modularization",{"type":17,"tag":26,"props":471,"children":472},{},[473],{"type":23,"value":35},{"type":17,"tag":37,"props":475,"children":477},{"id":476},"focus-on-readability",[478],{"type":23,"value":479},"Focus on readability",{"type":17,"tag":44,"props":481,"children":482},{},[483,488,493,498],{"type":17,"tag":48,"props":484,"children":485},{},[486],{"type":23,"value":487},"Modular code becomes more readable",{"type":17,"tag":48,"props":489,"children":490},{},[491],{"type":23,"value":492},"Code is read more than it is written",{"type":17,"tag":48,"props":494,"children":495},{},[496],{"type":23,"value":497},"Does a reader understand what the code does?",{"type":17,"tag":48,"props":499,"children":500},{},[501],{"type":23,"value":502},"Bad readability can be a \"code smell\"",{"type":17,"tag":26,"props":504,"children":505},{},[506],{"type":23,"value":35},{"type":17,"tag":37,"props":508,"children":510},{"id":509},"identify-future-functions",[511],{"type":23,"value":512},"Identify future functions",{"type":17,"tag":44,"props":514,"children":515},{},[516,521],{"type":17,"tag":48,"props":517,"children":518},{},[519],{"type":23,"value":520},"Don't Repeat Yourself (DRY): place reused code into a function",{"type":17,"tag":48,"props":522,"children":523},{},[524,526,532],{"type":23,"value":525},"Identify potential functions by their ",{"type":17,"tag":527,"props":528,"children":529},"em",{},[530],{"type":23,"value":531},"action",{"type":23,"value":533},"\n(e.g. \"plotting\", \"transforming\", \"extracting\", \"saving\")",{"type":17,"tag":26,"props":535,"children":536},{},[537],{"type":23,"value":35},{"type":17,"tag":37,"props":539,"children":541},{"id":540},"target-nested-code",[542],{"type":23,"value":543},"Target nested code",{"type":17,"tag":26,"props":545,"children":546},{},[547],{"type":23,"value":548},"Nested code is a prime target for modularization:",{"type":17,"tag":357,"props":550,"children":553},{"className":551,"code":552,"language":362,"meta":7},[360],"def checkTemperature(degrees):\n    if degrees \u003C 0:\n        if degrees \u003C -273:\n            if degrees \u003C -459:\n                print(\"This temperature is impossible.\")\n            else:\n                print(\"This temperature is likely Fahrenheit.\")\n        else:\n            print(\"This temperature is either Celsius or Fahrenheit.\")\n    else:\n        print(\"This temperature is in Kelvin, Celsius, or Fahrhenheit.\")\n",[554],{"type":17,"tag":365,"props":555,"children":556},{"__ignoreMap":7},[557],{"type":23,"value":552},{"type":17,"tag":26,"props":559,"children":560},{},[561],{"type":23,"value":35},{"type":17,"tag":37,"props":563,"children":565},{"id":564},"reduce-nestedness",[566],{"type":23,"value":567},"Reduce nestedness",{"type":17,"tag":26,"props":569,"children":570},{},[571],{"type":23,"value":572},"by extracting modules:",{"type":17,"tag":357,"props":574,"children":577},{"className":575,"code":576,"language":362,"meta":7},[360],"def validTemp(degrees):\n    if degrees \u003C -459:\n        return FALSE\n    return TRUE\n\ndef checkTemperature(degrees):\n    if not validTemp(degrees):\n        return \"invalid temperature\"\n    if degrees \u003C 0:\n        if degrees \u003C -273:\n            print(\"This temperature is likely Fahrenheit.\")\n        else:\n            print(\"This temperature is either Celsius or Fahrenheit.\")\n    else:\n        print(\"This temperature is in Kelvin, Celsius, or Fahrhenheit.\")\n",[578],{"type":17,"tag":365,"props":579,"children":580},{"__ignoreMap":7},[581],{"type":23,"value":576},{"type":17,"tag":26,"props":583,"children":584},{},[585],{"type":23,"value":35},{"type":17,"tag":37,"props":587,"children":589},{"id":588},"let-tests-help-you",[590],{"type":23,"value":591},"Let tests help you",{"type":17,"tag":44,"props":593,"children":594},{},[595,600],{"type":17,"tag":48,"props":596,"children":597},{},[598],{"type":23,"value":599},"Write tests for each individual module",{"type":17,"tag":48,"props":601,"children":602},{},[603,605],{"type":23,"value":604},"Use the test-writing procedure to look critically at the module's function:\n",{"type":17,"tag":44,"props":606,"children":607},{},[608,613],{"type":17,"tag":48,"props":609,"children":610},{},[611],{"type":23,"value":612},"Is the input/output clear?",{"type":17,"tag":48,"props":614,"children":615},{},[616],{"type":23,"value":617},"What can you not yet test? Extract it into a new module.",{"title":7,"searchDepth":11,"depth":11,"links":619},[620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638],{"id":39,"depth":11,"text":42},{"id":87,"depth":11,"text":90},{"id":104,"depth":11,"text":107},{"id":142,"depth":11,"text":145},{"id":176,"depth":11,"text":145},{"id":209,"depth":11,"text":145},{"id":242,"depth":11,"text":145},{"id":278,"depth":11,"text":145},{"id":316,"depth":11,"text":319},{"id":347,"depth":11,"text":350},{"id":389,"depth":11,"text":319},{"id":418,"depth":11,"text":421},{"id":442,"depth":11,"text":445},{"id":466,"depth":11,"text":469},{"id":476,"depth":11,"text":479},{"id":509,"depth":11,"text":512},{"id":540,"depth":11,"text":543},{"id":564,"depth":11,"text":567},{"id":588,"depth":11,"text":591},"markdown","local_fs:modules:good-practices-lesson:modular-code-slides.md","local_fs","modules/good-practices-lesson/modular-code-slides.md","md","---\ntitle: Modular Code\ntype: slides\norder: 2\nauthor: Barbara Vreede, Ole Mussmann\ndescription: Day 3 Code Refinery\n---\n\n\u003C!-- .slide: data-state=\"title\" -->\n\n# Developing Modular Code\n\nnote: \n\n\n===\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n## What is modularity?\n\n- Software is 'built up' from smaller elements\n- Elements are self-contained and independent\n- Each element handles a specific (set of) task(s)\n\n**Simple components** build **complex behavior**.\n\n===\n\n\u003C!-- .slide: data-state=\"standard\" -->\n\n## Modular code\n\n\u003Cimg width=\"900\" alt=\"think in building blocks\" src=\"https://user-images.githubusercontent.com/5747405/207459058-59c88b4c-1401-428f-b28a-0ac3e72bd964.png\">\n\n===\n\n\u003C!-- .slide: data-state=\"standard\" -->\n\n## What are these blocks/elements?\n\n- functions\n- classes\n- modules\n- libraries/packages\n- programs\n\n===\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n## Why write modular code?\n\nTo increase robustness:\n\n\u003Cimg width=\"200\" alt=\"testing a single module\" src=\"./media/modular-code/testing_module.png\">\n\n- A well-designed module can be tested.\n- This helps keep the codebase well-functioning and bug-free.\n\n===\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n## Why write modular code?\n\nTo make maintenance easier:\n\n\u003Cimg width=\"300\" alt=\"testing a module taken from a larger project\" src=\"./media/modular-code/testing_module_maintenance.png\">\n\n- Modular code is more readable and understandable.\n- Modules can be debugged separately.\n\n===\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n## Why write modular code?\n\nTo allow reusability:\n\n\u003Cimg width=\"400\" alt=\"reuse a module in another project\" src=\"./media/modular-code/reuse_module.png\">\n\n- A module can live independent of its original context\n- It can be reused by another project\n\n===\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n## Why write modular code?\n\nTo facilitate scalability:\n\n\u003Cimg height=\"300\" alt=\"scalability\" src=\"./media/modular-code/scalability.png\">\n\n\n\u003Cdiv>\n\n- Complexity remains low by design\n- This creates space for scaling up\n\n\u003C/div>\n\n===\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n## Why write modular code?\n\nTo create opportunities for innovation:\n\n\u003Cimg height=\"300\" alt=\"tetris shows innovation\" src=\"./media/modular-code/tetris_innovation.png\">\n\n- Modules increase the capabilities and power of a project\n- Rearrange old modules for new applications\n\n===\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n\u003Cimg width=\"800\" alt=\"development speed\" src=\"./media/modular-code/development-speed.svg\">\n\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n## A good module...\n\n- performs limited and clearly defined tasks\n- has a good name\n\u003C!-- .element: class=\"fragment\" data-fragment-index=\"2\" -->\n- is readable\n\u003C!-- .element: class=\"fragment\" data-fragment-index=\"3\" -->\n\n===\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n## Readability =/= shorter code\n\nShorter:\n```python=\nindexATG = [n for n,i in enumerate(myList) if i == 'ATG']\nindexAAG = [n for n,i in enumerate(myList) if i == 'AAG']\n```\n\nMore modular:\n```python=\ndef getIndex(inputList,z):\n    zIndex = [n for n,i in enumerate(li) if i == z]\n    return zIndex\n\nindexATG = getIndex(myList,'ATG')\nindexAAG = getIndex(myList,'AAG')\n```\n\n===\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n## A good module...\n\n- performs limited and clearly defined tasks\n- has a good name\n- is readable\n- is pure/does not have a 'state'\n\n===\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n## A pure function\n\nhas no side-effects:\n\n```python=\ndef fahrenheit_to_celsius(temp_f):\n    temp_c = (temp_f - 32.0) * (5.0/9.0)\n    return temp_c\n\n>>> temp_c = fahrenheit_to_celsius(temp_f=77.0)\n>>> print(temp_c)\n25.0\n```\n\n===\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n## A stateful function\n\nchanges its environment:\n\n```python=\ndef fahrenheit_to_celsius(temp_f):\n    global temp_c\n    temp_c = (temp_f - f_to_c_offset) * f_to_c_factor\n\n>>> f_to_c_offset = 32.0\n>>> f_to_c_factor = (5.0/9.0)\n>>> temp_c = 0.0\n>>> print(temp_c)\n0.0\n>>> fahrenheit_to_celsius(temp_f=77.0)\n>>> print(temp_c)\n25.0\n```\n\n===\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n## Identifying opportunities for modularization\n\n===\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n## Focus on readability\n\n- Modular code becomes more readable\n- Code is read more than it is written\n- Does a reader understand what the code does?\n- Bad readability can be a \"code smell\"\n\n===\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n## Identify future functions\n\n- Don't Repeat Yourself (DRY): place reused code into a function\n- Identify potential functions by their _action_\n    (e.g. \"plotting\", \"transforming\", \"extracting\", \"saving\")\n\n===\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n## Target nested code\n\nNested code is a prime target for modularization:\n\n```python=\ndef checkTemperature(degrees):\n    if degrees \u003C 0:\n        if degrees \u003C -273:\n            if degrees \u003C -459:\n                print(\"This temperature is impossible.\")\n            else:\n                print(\"This temperature is likely Fahrenheit.\")\n        else:\n            print(\"This temperature is either Celsius or Fahrenheit.\")\n    else:\n        print(\"This temperature is in Kelvin, Celsius, or Fahrhenheit.\")\n```\n\n===\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n## Reduce nestedness\n\nby extracting modules:\n\n```python=\ndef validTemp(degrees):\n    if degrees \u003C -459:\n        return FALSE\n    return TRUE\n\ndef checkTemperature(degrees):\n    if not validTemp(degrees):\n        return \"invalid temperature\"\n    if degrees \u003C 0:\n        if degrees \u003C -273:\n            print(\"This temperature is likely Fahrenheit.\")\n        else:\n            print(\"This temperature is either Celsius or Fahrenheit.\")\n    else:\n        print(\"This temperature is in Kelvin, Celsius, or Fahrhenheit.\")\n```\n\n===\n\n\u003C!-- .slide: data-state=\"standard\"  -->\n\n## Let tests help you\n\n- Write tests for each individual module\n- Use the test-writing procedure to look critically at the module's function:\n    - Is the input/output clear?\n    - What can you not yet test? Extract it into a new module.\n\n",[646,681],{"_path":647,"_dir":648,"_draft":6,"_partial":6,"_locale":7,"title":649,"description":7,"body":650,"_type":639,"_id":678,"_source":641,"_file":679,"_extension":643,"plainText":680},"/main/about","main","About",{"type":14,"children":651,"toc":674},[652,658,663,669],{"type":17,"tag":37,"props":653,"children":655},{"id":654},"about-this-lessonproject",[656],{"type":23,"value":657},"About this lesson/project",{"type":17,"tag":26,"props":659,"children":660},{},[661],{"type":23,"value":662},"Provide details about the project and lesson.",{"type":17,"tag":37,"props":664,"children":666},{"id":665},"target-audience",[667],{"type":23,"value":668},"Target audience",{"type":17,"tag":26,"props":670,"children":671},{},[672],{"type":23,"value":673},"Define target audience for this material.",{"title":7,"searchDepth":11,"depth":11,"links":675},[676,677],{"id":654,"depth":11,"text":657},{"id":665,"depth":11,"text":668},"local_fs:main:about.md","main/about.md","---\ntitle: About\n---\n\n## About this lesson/project\n\nProvide details about the project and lesson.\n\n## Target audience\n\nDefine target audience for this material.",{"_path":682,"_dir":648,"_draft":6,"_partial":6,"_locale":7,"title":683,"description":7,"body":684,"_type":639,"_id":700,"_source":641,"_file":701,"_extension":643,"plainText":702},"/main/contribute","Contribute",{"type":14,"children":685,"toc":697},[686,692],{"type":17,"tag":37,"props":687,"children":689},{"id":688},"contributing-to-this-lesson",[690],{"type":23,"value":691},"Contributing to this lesson",{"type":17,"tag":26,"props":693,"children":694},{},[695],{"type":23,"value":696},"Add contributing guidelines for you project.",{"title":7,"searchDepth":11,"depth":11,"links":698},[699],{"id":688,"depth":11,"text":691},"local_fs:main:contribute.md","main/contribute.md","---\ntitle: Contribute\n---\n\n## Contributing to this lesson\n\nAdd contributing guidelines for you project.",1722342608613]