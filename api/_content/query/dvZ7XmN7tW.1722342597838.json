[{"_path":"/modules/good-practices-lesson/ci-slides","_dir":"good-practices-lesson","_draft":false,"_partial":false,"_locale":"","title":"CI","description":"Day 3 Code Refinery","type":"slides","order":5,"author":"Ole Mussman","_type":"markdown","_id":"local_fs:modules:good-practices-lesson:ci-slides.md","_source":"local_fs","_file":"modules/good-practices-lesson/ci-slides.md","_extension":"md","plainText":"---\ntitle: CI\ntype: slides\norder: 5\nauthor: Ole Mussman\ndescription: Day 3 Code Refinery\n---\n\n\n<!-- .slide: data-state=\"title\" -->\n\n# Continuous Integration\n\nnote:\n\n\n===\n\n<!-- .slide: data-state=\"standard\"  -->\n\n# Continuous Integration\n<img src=\"./media/ci/automate.jpg\">\n\n===\n\n\n<!-- .slide: data-state=\"standard\"  -->\n\n\n# Continuous _What_ Now...? \n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n<style>\n\n/* Blockquote main style */\n.blockquote {\n    position: relative;\n    font-weight: 800;\n    padding: 30px 0;\n    width: 100%;\n    max-width: 500px;\n    z-index: 1;\n    margin: 80px auto;\n    align-self: center;\n    border-top: solid 1px;\n    border-bottom: solid 1px;\n}\n\n/* Blockquote header */\n.blockquote h1 {\n    position: relative;\n    font-size: small;\n    font-weight: 800;\n    line-height: 1;\n    margin: 0;\n}\n\n/* Blockquote right double quotes */\n.blockquote:after {\n    position: absolute;\n    content: \"‚Äù\";\n    font-size: 10rem;\n    line-height: 0;\n    bottom: -43px;\n    right: 30px;\n}\n\n/* increase header size after 600px */\n@media all and (min-width: 600px) {\n    .blockquote h1 {\n        font-size: 60px;\n   }\n\n}\n\n/* Blockquote subheader */\n.blockquote h4 {\n    position: relative;\n    font-size: 1.4rem;\n    font-weight: normal;\n    line-height: 1;\n    margin: 0;\n    padding-top: 20px;\n    z-index: 1;\n}\n\n</style>\n\n# Continuous _What_ Now...?\n\n<div class=\"blockquote\">\n  Automating the integration of code changes from multiple contributors into a single software project.\n<h4>&mdash; <a href=\"atlassian.com/continuous-delivery/continuous-integration\">Atlassian</a></h4>\n</div>\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## What Is It Good For? \n- Linting\n- Automated testing\n- Security analyses\n- Send messages\n  - Slack, Discord, Matrix, Mastodon, email, ...\n- Building & compiling\n  - Code, Documentation, ...\n- Deploying (PyPi, Kubernetes, GitHub Pages)\n  - Just like these slides\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Take-away\n\n- Best practices are a time-investment _with returns_\n- CI saves time and keeps your project clean\n- What improvements could your project benefit from?\n- What's nice to know, but overkill for your current work?\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Hands-On\n\n<div style=\"float: left; width: 60%; margin-bottom: 1em;\">\n  <ol>\n    <li><strong>Person A: </strong>Ensure your repository has tests</li>\n    <li><strong>Person A: </strong>Set up Continuous Integration (automatic testing)</li>\n    <li><strong>Person A: </strong>Verify that tests ran</li>\n    <li><strong>Person A: </strong>Add a test that fails</li>\n    <li><strong>Person A: </strong>Open an issue</li>\n    <li><strong>Person B: </strong>Fork ‚ö†Ô∏è and clone person A's repo</li>\n    <li><strong>Person B: </strong>Fix the broken test</li>\n    <li><strong>Person B: </strong>Open a pull request linked to the issue</li>\n    <li><strong>Person B: </strong>Verify that tests now run</li>\n    <li><strong>Person A: </strong>Accept Person B's pull request</li>\n  </ol>\n</div>\n<img style=\"float: right; width: 39%;\" src=\"./media/ci/full-cycle-ci.png\">\n\n\n"},{"_path":"/modules/good-practices-lesson/good-practices-slides","_dir":"good-practices-lesson","_draft":false,"_partial":false,"_locale":"","title":"Good Practices","description":"Getting more professional","type":"slides","order":1,"author":"Ole Mussmann","_type":"markdown","_id":"local_fs:modules:good-practices-lesson:good-practices-slides.md","_source":"local_fs","_file":"modules/good-practices-lesson/good-practices-slides.md","_extension":"md","plainText":"---\ntitle: Good Practices\ntype: slides\norder: 1\nauthor: Ole Mussmann\ndescription: Getting more professional\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# Good Practices for Research Software Development\n\nnote: \n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n<style>\n\n/* Blockquote main style */\n.blockquote {\n    position: relative;\n    font-weight: 800;\n    padding: 30px 0;\n    width: 100%;\n    max-width: 500px;\n    z-index: 1;\n    margin: 80px auto;\n    align-self: center;\n    border-top: solid 1px;\n    border-bottom: solid 1px;\n}\n\n/* Blockquote header */\n.blockquote h1 {\n    position: relative;\n    font-size: small;\n    font-weight: 800;\n    line-height: 1;\n    margin: 0;\n}\n\n/* Blockquote right double quotes */\n.blockquote:after {\n    position: absolute;\n    content: \"‚Äù\";\n    font-size: 10rem;\n    line-height: 0;\n    bottom: -43px;\n    right: 30px;\n}\n\n/* increase header size after 600px */\n@media all and (min-width: 600px) {\n    .blockquote h1 {\n        font-size: 60px;\n   }\n\n}\n\n/* Blockquote subheader */\n.blockquote h4 {\n    position: relative;\n    font-size: 1.4rem;\n    font-weight: normal;\n    line-height: 1;\n    margin: 0;\n    padding-top: 20px;\n    z-index: 1;\n}\n\n</style>\n\n\n## Programming vs Software Engineering\n\n<div class=\"blockquote-wrapper fragment\">\n  <div class=\"blockquote\">\n      Software engineering is programming integrated over time.\n    <h4>&mdash;Titus Winters, Google C++ devlead</h4>\n  </div>\n</div>\n\nNote:\nWhat's the difference between programming and software engineering?\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n<img width=\"800\" alt=\"development speed\" src=\"./media/good-practices/development-speed.svg\">\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Development Speed ‚ö°\n\n<div style=\"float: left;\">\n<ul>\n  <li>Red curve\n  <ul>\n    <li>Writing code</li>\n  </ul>\n  <li>Blue curve\n  <ul>\n    <li>Version Control</li>\n    <li>Collaborative development</li>\n    <li>Code review</li>\n    <li>Testing</li>\n    <li>Modular code</li>\n    <li>Documentation</li>\n  </ul>\n</ul>\n</div>\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Projects are Different\n\n<img style=\"height: 70vh;\" src=\"./media/good-practices/branching.png\"/>\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## What to Use When?\n\n<div style=\"width: 49%; float: left; font-size: smaller;\">\n  <table>\n    <tr>\n      <th>‚è±Ô∏è&nbsp;lifetime</th>\n      <th>use</th>\n    </tr>\n    <tr>\n      <td>1-shot</td>\n      <td class=\"fragment\" data-fragment-index=\"1\">üö´</td>\n    </tr>\n    <tr>\n      <td>week+</td>\n      <td class=\"fragment\" data-fragment-index=\"2\">Git &amp; GitHub</td>\n    </tr>\n    <tr>\n      <td>3 months+</td>\n      <td class=\"fragment\" data-fragment-index=\"3\">Testing</td>\n    </tr>\n    <tr>\n      <td>6 months+</td>\n      <td class=\"fragment\" data-fragment-index=\"4\">Documentation,<br>automate testing</td>\n    </tr>\n  </table>\n</div>\n\n<div style=\"width: 49%; float: right; font-size: smaller;\" class=\"fragment\" data-fragment-index=\"5\">\n  <table>\n    <tr>\n      <th>üßëüßë&nbsp;users</th>\n      <th>use</th>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td class=\"fragment\" data-fragment-index=\"6\">Push to main</td>\n    </tr>\n    <tr>\n      <td>2+</td>\n      <td class=\"fragment\" data-fragment-index=\"7\">Branches, merging</td>\n    </tr>\n    <tr>\n      <td>2+ (+students)</td>\n      <td class=\"fragment\" data-fragment-index=\"8\">Code review</td>\n    </tr>\n    <tr>\n      <td>2+ (+external)</td>\n      <td class=\"fragment\" data-fragment-index=\"9\">Release branch, <br>&amp; everything else</td>\n    </tr>\n  </table>\n</div>\n\nNote:\n- Train these tools\n- Experience their effect\n- Use own judgement, but\n- avoid \"but in my project...\"\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Good practices are investments\n\nProfits come in\n\n- Development efficiency\n- Reproducibility\n- Reusability\n- Faster debugging\n- Robustness, fewer errors\n- Fewer headaches!"}]