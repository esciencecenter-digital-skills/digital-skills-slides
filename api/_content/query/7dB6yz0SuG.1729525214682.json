[{"_path":"/modules/git-lesson/info","_dir":"git-lesson","_draft":false,"_partial":false,"_locale":"","title":"Info","description":"","type":"info","order":0,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"collaborative-version-control-with-git-and-github"},"children":[{"type":"text","value":"Collaborative version control with Git and GitHub"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This workshop introduces version control with Git and teaches you how to collaborate using Git and GitHub."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Knowing how to use Git and GitHub will allow you to keep track of changes in your software project, publish your code online, collaborate with several people in the same project, and contribute to projects as an external collaborator."}]},{"type":"element","tag":"h2","props":{"id":"the-content"},"children":[{"type":"text","value":"The content"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This website hosts only the slides for the workshop. For the lesson content and exercises, see this "},{"type":"element","tag":"a","props":{"href":"https://esciencecenter-digital-skills.github.io/git-lesson/","rel":["nofollow"]},"children":[{"type":"text","value":"workbench lesson"}]},{"type":"text","value":" or associated "},{"type":"element","tag":"a","props":{"href":"https://github.com/esciencecenter-digital-skills/git-lesson","rel":["nofollow"]},"children":[{"type":"text","value":"GitHub repository"}]},{"type":"text","value":"."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"collaborative-version-control-with-git-and-github","depth":2,"text":"Collaborative version control with Git and GitHub"},{"id":"the-content","depth":2,"text":"The content"}]}},"_type":"markdown","_id":"local_fs:modules:git-lesson:info.md","_source":"local_fs","_file":"modules/git-lesson/info.md","_extension":"md","plainText":"---\ntitle: Info\ntype: info\norder: 0\n---\n\n## Collaborative version control with Git and GitHub\nThis workshop introduces version control with Git and teaches you how to collaborate using Git and GitHub.\n\nKnowing how to use Git and GitHub will allow you to keep track of changes in your software project, publish your code online, collaborate with several people in the same project, and contribute to projects as an external collaborator.\n\n## The content\nThis website hosts only the slides for the workshop. For the lesson content and exercises, see this [workbench lesson](https://esciencecenter-digital-skills.github.io/git-lesson/) or associated [GitHub repository](https://github.com/esciencecenter-digital-skills/git-lesson)."},{"_path":"/modules/git-lesson/git-slides","_dir":"git-lesson","_draft":false,"_partial":false,"_locale":"","title":"Git and GitHub","description":"What is version control and why should I use it?","type":"slides","order":1,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"automated-version-control"},"children":[{"type":"text","value":"Automated Version Control"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"What is version control and why should I use it?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Git all set up?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"SSH working?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Otherwise: breakout room"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"img","props":{"style":"height: 70vh;","src":"https://swcarpentry.github.io/git-novice/fig/phd101212s.png"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{"style":"font-size: small;"},"children":[{"type":"text","value":"‚ÄúPiled Higher and Deeper‚Äù by Jorge Cham, "},{"type":"element","tag":"a","props":{"href":"http://www.phdcomics.com","rel":["nofollow"]},"children":[{"type":"text","value":"http://www.phdcomics.com"}]},{"type":"text","value":" "}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"documents-are"},"children":[{"type":"text","value":"Documents are..."}]},{"type":"element","tag":"div","props":{"className":["fragment"]},"children":[{"type":"text","value":"\n  a series of changes\n  "},{"type":"element","tag":"img","props":{"style":"height: 30vh; margin: 0; padding: 0;","src":"https://swcarpentry.github.io/git-novice/fig/play-changes.svg"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"collaboration"},"children":[{"type":"text","value":"Collaboration"}]},{"type":"element","tag":"div","props":{"style":"float: left; width: 49%;"},"children":[{"type":"text","value":"\n  independent changes\n  "},{"type":"element","tag":"img","props":{"style":"height: 350px; aspect-ratio: 327/308;","src":"/modules/git-lesson/media/versions.svg"},"children":[]}]},{"type":"element","tag":"div","props":{"className":["fragment"],"style":"float: right; width: 49%;"},"children":[{"type":"text","value":"\n  can be merged\n  "},{"type":"element","tag":"img","props":{"style":"height: 350px; aspect-ratio: 335/307;","src":"/modules/git-lesson/media/merge.svg"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"version-control-key-points"},"children":[{"type":"text","value":"Version Control: Key Points"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Version control is track changes on steroids."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Version control is like an unlimited "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"undo"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Version control also allows many people to work in parallel."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"the-holy-realms-of-git"},"children":[{"type":"text","value":"The Holy Realms of Git"}]},{"type":"element","tag":"img","props":{"src":"https://swcarpentry.github.io/git-novice/fig/git-staging-area.svg"},"children":[]},{"type":"element","tag":"ul","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"b","props":{},"children":[{"type":"text","value":"workspace"}]},{"type":"text","value":"¬†¬†üìÇ"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"ul","props":{},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Your filesystem"}]},{"type":"text","value":"\n  "}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{"className":["fragment"]},"children":[{"type":"element","tag":"b","props":{},"children":[{"type":"text","value":"index"}]},{"type":"text","value":"¬†¬†üïí\n    "},{"type":"element","tag":"ul","props":{},"children":[{"type":"text","value":"\n      "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Staging area"}]},{"type":"text","value":"\n      "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Files wait patiently to be committed"}]},{"type":"text","value":"\n    "}]},{"type":"text","value":"\n  "}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{"className":["fragment"]},"children":[{"type":"element","tag":"b","props":{},"children":[{"type":"text","value":"local repository"}]},{"type":"text","value":"¬†¬†üóÇÔ∏è\n    "},{"type":"element","tag":"ul","props":{},"children":[{"type":"text","value":"\n      "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Contains branches, commits, history, etc."}]},{"type":"text","value":"\n    "}]},{"type":"text","value":"\n  "}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"crowded-staging-area-index"},"children":[{"type":"text","value":"Crowded Staging Area / Index"}]},{"type":"element","tag":"img","props":{"src":"https://swcarpentry.github.io/git-novice/fig/git-committing.svg"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Staging Area / Index can hold many files and folders."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"quiz-12"},"children":[{"type":"text","value":"Quiz 1/2"}]},{"type":"element","tag":"blockquote","props":{"style":"text-align: left;"},"children":[{"type":"text","value":"\nWhich commit message should I choose?\n"},{"type":"element","tag":"ol","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"‚ÄúChanges‚Äù"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"‚ÄúAdded line ‚ÄòThis project started as a joke‚Äô to myfile.txt‚Äù"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"‚ÄúDiscuss origin of the project‚Äù"}]}]},{"type":"text","value":"\n\n"}]},{"type":"element","tag":"blockquote","props":{"className":["fragment"],"style":"text-align: right;"},"children":[{"type":"text","value":"\nMake it short, descriptive, and imperative "},{"type":"element","tag":"span","props":{"style":"font-style: normal;"},"children":[{"type":"text","value":"üê∫"}]}]},{"type":"element","tag":"blockquote","props":{"className":["fragment"],"style":"text-align: right;"},"children":[{"type":"text","value":"\nSo yeah, the last one is good! "},{"type":"element","tag":"span","props":{"style":"font-style: normal;"},"children":[{"type":"text","value":"üê∫"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"quiz-22"},"children":[{"type":"text","value":"Quiz 2/2"}]},{"type":"element","tag":"blockquote","props":{"style":"text-align: left;"},"children":[{"type":"text","value":"\nWhich command saves "},{"type":"element","tag":"b","props":{},"children":[{"type":"text","value":"myfile.txt"}]},{"type":"text","value":" to my Git repo?"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"ol","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"pre","props":{"style":"width: 100%; font-style: normal;","dataId":"code-animation"},"children":[{"type":"element","tag":"code","props":{"dataTrim":"","className":["bash"]},"children":[{"type":"text","value":"\n    $ git commit -m \"my recent changes\"\n    "}]}]},{"type":"text","value":"\n  "}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"pre","props":{"style":"width: 100%; font-style: normal;","dataId":"code-animation"},"children":[{"type":"element","tag":"code","props":{"dataTrim":"","className":["bash"]},"children":[{"type":"text","value":"\n    $ git init myfile.txt\n    $ git commit -m \"my recent changes\"\n    "}]}]},{"type":"text","value":"\n  "}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"pre","props":{"style":"width: 100%; font-style: normal;","dataId":"code-animation"},"children":[{"type":"element","tag":"code","props":{"dataTrim":"","className":["bash"]},"children":[{"type":"text","value":"\n    $ git add myfile.txt\n    $ git commit -m \"my recent changes\"\n    "}]}]},{"type":"text","value":"\n  "}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"pre","props":{"style":"width: 100%; font-style: normal;","dataId":"code-animation"},"children":[{"type":"element","tag":"code","props":{"dataTrim":"","className":["bash"]},"children":[{"type":"text","value":"\n    $ git commit -m myfile.txt \"my recent changes\"\n    "}]}]},{"type":"text","value":"\n  "}]}]},{"type":"text","value":"\n\n"}]},{"type":"element","tag":"blockquote","props":{"className":["fragment"],"style":"text-align: right;"},"children":[{"type":"text","value":"\n3. adds your file to the index, and then commits it. That's the one.\n"},{"type":"element","tag":"span","props":{"style":"font-style: normal;"},"children":[{"type":"text","value":"üê∫"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"tracking-changes-key-points"},"children":[{"type":"text","value":"Tracking Changes: Key Points"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Files can be stored in\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"working directory"}]},{"type":"text","value":": the files you can see"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"staging area / index"}]},{"type":"text","value":": files about to be committed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"local repository"}]},{"type":"text","value":": the permanent record"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"git status"}]},{"type":"text","value":"¬† shows the status of a repository"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"git add"}]},{"type":"text","value":"¬† puts files in the staging area"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"git commit"}]},{"type":"text","value":"¬† saves the staged content as a new commit in the local repository"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Write short, descriptive, and imperative commit messages"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"exploring-history"},"children":[{"type":"text","value":"Exploring history"}]},{"type":"element","tag":"img","props":{"src":"https://esciencecenter-digital-skills.github.io/git-lesson/fig/git-restore.svg"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Use "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"git restore"}]},{"type":"text","value":" with the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"-s"}]},{"type":"text","value":" option to retrieve a specific state."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nIn this example we restore to the state before the most recent commit,\nwhich is "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"HEAD~1"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"f22b25e"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"documents-are","depth":2,"text":"Documents are..."},{"id":"collaboration","depth":2,"text":"Collaboration"},{"id":"version-control-key-points","depth":2,"text":"Version Control: Key Points"},{"id":"the-holy-realms-of-git","depth":2,"text":"The Holy Realms of Git"}]}},"_type":"markdown","_id":"local_fs:modules:git-lesson:git-slides.md","_source":"local_fs","_file":"modules/git-lesson/git-slides.md","_extension":"md","plainText":"---\ntitle: Git and GitHub\ntype: slides\norder: 1\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# Automated Version Control\n\nWhat is version control and why should I use it?\n\nNote:\n- Git all set up?\n- SSH working?\n- Otherwise: breakout room\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n<img style=\"height: 70vh;\" src=\"https://swcarpentry.github.io/git-novice/fig/phd101212s.png\"/>\n\n<span style=\"font-size: small;\">‚ÄúPiled Higher and Deeper‚Äù by Jorge Cham, http://www.phdcomics.com </span>\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Documents are...\n<div class=\"fragment\">\n  a series of changes\n  <img style=\"height: 30vh; margin: 0; padding: 0;\" src=\"https://swcarpentry.github.io/git-novice/fig/play-changes.svg\"/>\n</div>\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Collaboration\n<div style=\"float: left; width: 49%;\">\n  independent changes\n  <img style=\"height: 350px;\" src=\"./media/versions.svg\"/>\n</div>\n<div class=\"fragment\" style=\"float: right; width: 49%;\">\n  can be merged\n  <img style=\"height: 350px;\" src=\"./media/merge.svg\"/>\n</div>\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Version Control: Key Points\n\n- Version control is track changes on steroids.\n- Version control is like an unlimited **undo**.\n- Version control also allows many people to work in parallel.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## The Holy Realms of Git\n\n<img src=\"https://swcarpentry.github.io/git-novice/fig/git-staging-area.svg\">\n\n<ul>\n  <li><b>workspace</b>&nbsp;&nbsp;üìÇ</li>\n  <ul>\n    <li>Your filesystem</li>\n  </ul>\n  <li class=\"fragment\"><b>index</b>&nbsp;&nbsp;üïí\n    <ul>\n      <li>Staging area</li>\n      <li>Files wait patiently to be committed</li>\n    </ul>\n  </li>\n  <li class=\"fragment\"><b>local repository</b>&nbsp;&nbsp;üóÇÔ∏è\n    <ul>\n      <li>Contains branches, commits, history, etc.</li>\n    </ul>\n  </li>\n<ul>\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Crowded Staging Area / Index\n\n<img src=\"https://swcarpentry.github.io/git-novice/fig/git-committing.svg\">\n\nThe Staging Area / Index can hold many files and folders.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Quiz 1/2\n\n<blockquote style=\"text-align: left;\">\nWhich commit message should I choose?\n<ol>\n  <li>‚ÄúChanges‚Äù</li>\n  <li>‚ÄúAdded line ‚ÄòThis project started as a joke‚Äô to myfile.txt‚Äù</li>\n  <li>‚ÄúDiscuss origin of the project‚Äù</li>\n</ol>\n</code></pre>\n</blockquote>\n<blockquote class=\"fragment\" style=\"text-align: right;\">\nMake it short, descriptive, and imperative <span style=\"font-style: normal;\">üê∫</span>\n</blockquote>\n<blockquote class=\"fragment\" style=\"text-align: right;\">\nSo yeah, the last one is good! <span style=\"font-style: normal;\">üê∫</span>\n</blockquote>\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Quiz 2/2\n\n<blockquote style=\"text-align: left;\">\nWhich command saves <b>myfile.txt</b> to my Git repo?<br>\n<ol>\n  <li>\n    <pre style=\"width: 100%; font-style: normal;\" data-id=\"code-animation\"><code data-trim class=\"bash\">\n    $ git commit -m \"my recent changes\"\n    </code></pre>\n  </li>\n  <li>\n    <pre style=\"width: 100%; font-style: normal;\" data-id=\"code-animation\"><code data-trim class=\"bash\">\n    $ git init myfile.txt\n    $ git commit -m \"my recent changes\"\n    </code></pre>\n  </li>\n  <li>\n    <pre style=\"width: 100%; font-style: normal;\" data-id=\"code-animation\"><code data-trim class=\"bash\">\n    $ git add myfile.txt\n    $ git commit -m \"my recent changes\"\n    </code></pre>\n  </li>\n  <li>\n    <pre style=\"width: 100%; font-style: normal;\" data-id=\"code-animation\"><code data-trim class=\"bash\">\n    $ git commit -m myfile.txt \"my recent changes\"\n    </code></pre>\n  </li>\n</ol>\n</code></pre>\n</blockquote>\n<blockquote class=\"fragment\" style=\"text-align: right;\">\n3. adds your file to the index, and then commits it. That's the one.\n<span style=\"font-style: normal;\">üê∫</span>\n</blockquote>\n\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Tracking Changes: Key Points\n\n- Files can be stored in\n  - **working directory**: the files you can see\n  - **staging area / index**: files about to be committed\n  - **local repository**: the permanent record\n- **git status**&nbsp; shows the status of a repository\n- **git add**&nbsp; puts files in the staging area\n- **git commit**&nbsp; saves the staged content as a new commit in the local repository\n- Write short, descriptive, and imperative commit messages\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Exploring history\n<img src=\"https://esciencecenter-digital-skills.github.io/git-lesson/fig/git-restore.svg\">\n\nUse `git restore` with the `-s` option to retrieve a specific state. \n\nNote:\nIn this example we restore to the state before the most recent commit, \nwhich is `HEAD~1` or `f22b25e`\n"}]