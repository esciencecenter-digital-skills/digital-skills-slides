[{"_path":"/main/contribute","_dir":"main","_draft":false,"_partial":false,"_locale":"","title":"Contribute","description":"","_type":"markdown","_id":"local_fs:main:contribute.md","_source":"local_fs","_file":"main/contribute.md","_extension":"md","plainText":"---\ntitle: Contribute\n---\n\n## Contributing to this lesson\n\nAdd contributing guidelines for you project."},{"_path":"/modules/git-lesson/git-introduction","_dir":"git-lesson","_draft":false,"_partial":false,"_locale":"","title":"Introduction to Git and GitHub","description":"What is version control and why should I use it?","type":"slides","order":1,"_type":"markdown","_id":"local_fs:modules:git-lesson:git-introduction.md","_source":"local_fs","_file":"modules/git-lesson/git-introduction.md","_extension":"md","plainText":"---\ntitle: Introduction to Git and GitHub\ntype: slides\norder: 1\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# Automated Version Control\n\nWhat is version control and why should I use it?\n\nNote:\n- Git all set up?\n- SSH working?\n- Otherwise: breakout room\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n<img style=\"height: 70vh;\" src=\"https://swcarpentry.github.io/git-novice/fig/phd101212s.png\"/>\n\n<span style=\"font-size: small;\">“Piled Higher and Deeper” by Jorge Cham, http://www.phdcomics.com </span>\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Documents are...\n<div class=\"fragment\">\n  a series of changes\n  <img style=\"height: 30vh; margin: 0; padding: 0;\" src=\"https://swcarpentry.github.io/git-novice/fig/play-changes.svg\"/>\n</div>\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Collaboration\n<div style=\"float: left; width: 49%;\">\n  independent changes\n  <img style=\"height: 350px;\" src=\"./media/versions.svg\"/>\n</div>\n<div class=\"fragment\" style=\"float: right; width: 49%;\">\n  can be merged\n  <img style=\"height: 350px;\" src=\"./media/merge.svg\"/>\n</div>\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Version Control: Key Points\n\n- Version control is track changes on steroids.\n- Version control is like an unlimited **undo**.\n- Version control also allows many people to work in parallel.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## The Holy Realms of Git\n\n<img src=\"https://swcarpentry.github.io/git-novice/fig/git-staging-area.svg\">\n\n<ul>\n  <li><b>workspace</b>&nbsp;&nbsp;📂</li>\n  <ul>\n    <li>Your filesystem</li>\n  </ul>\n  <li class=\"fragment\"><b>index</b>&nbsp;&nbsp;🕒\n    <ul>\n      <li>Staging area</li>\n      <li>Files wait patiently to be committed</li>\n    </ul>\n  </li>\n  <li class=\"fragment\"><b>local repository</b>&nbsp;&nbsp;🗂️\n    <ul>\n      <li>Contains branches, commits, history, etc.</li>\n    </ul>\n  </li>\n<ul>\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Crowded Staging Area / Index\n\n<img src=\"https://swcarpentry.github.io/git-novice/fig/git-committing.svg\">\n\nThe Staging Area / Index can hold many files and folders.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Quiz 1/2\n\n<blockquote style=\"text-align: left;\">\nWhich commit message should I choose?\n<ol>\n  <li>“Changes”</li>\n  <li>“Added line ‘This project started as a joke’ to myfile.txt”</li>\n  <li>“Discuss origin of the project”</li>\n</ol>\n</code></pre>\n</blockquote>\n<blockquote class=\"fragment\" style=\"text-align: right;\">\nMake it short, descriptive, and imperative <span style=\"font-style: normal;\">🐺</span>\n</blockquote>\n<blockquote class=\"fragment\" style=\"text-align: right;\">\nSo yeah, the last one is good! <span style=\"font-style: normal;\">🐺</span>\n</blockquote>\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Quiz 2/2\n\n<blockquote style=\"text-align: left;\">\nWhich command saves <b>myfile.txt</b> to my Git repo?<br>\n<ol>\n  <li>\n    <pre style=\"width: 100%; font-style: normal;\" data-id=\"code-animation\"><code data-trim class=\"bash\">\n    $ git commit -m \"my recent changes\"\n    </code></pre>\n  </li>\n  <li>\n    <pre style=\"width: 100%; font-style: normal;\" data-id=\"code-animation\"><code data-trim class=\"bash\">\n    $ git init myfile.txt\n    $ git commit -m \"my recent changes\"\n    </code></pre>\n  </li>\n  <li>\n    <pre style=\"width: 100%; font-style: normal;\" data-id=\"code-animation\"><code data-trim class=\"bash\">\n    $ git add myfile.txt\n    $ git commit -m \"my recent changes\"\n    </code></pre>\n  </li>\n  <li>\n    <pre style=\"width: 100%; font-style: normal;\" data-id=\"code-animation\"><code data-trim class=\"bash\">\n    $ git commit -m myfile.txt \"my recent changes\"\n    </code></pre>\n  </li>\n</ol>\n</code></pre>\n</blockquote>\n<blockquote class=\"fragment\" style=\"text-align: right;\">\n3. adds your file to the index, and then commits it. That's the one.\n<span style=\"font-style: normal;\">🐺</span>\n</blockquote>\n\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Tracking Changes: Key Points\n\n- Files can be stored in\n  - **working directory**: the files you can see\n  - **staging area / index**: files about to be committed\n  - **local repository**: the permanent record\n- **git status**&nbsp; shows the status of a repository\n- **git add**&nbsp; puts files in the staging area\n- **git commit**&nbsp; saves the staged content as a new commit in the local repository\n- Write short, descriptive, and imperative commit messages\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Exploring history\n<img src=\"https://carpentries-incubator.github.io/collaborative-git-and-github-lesson/fig/git-restore.svg\">\n\nUse `git restore` with the `-s` option to retrieve a specific state. \n\nNote:\nIn this example we restore to the state before the most recent commit, \nwhich is `HEAD~1` or `f22b25e`\n\n"}]